// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  image     String?
  isActive  Boolean  @default(true)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  ratings   Rating[]
  groups    Group[]

  @@index([deleted, isActive])
}

model Word {
  id                 String   @id @default(uuid())
  englishWord        String
  spanishTranslation String?
  deleted            Boolean  @default(false)
  createdAt          DateTime @default(now())
  updateAt           DateTime @updatedAt

  ratings Rating[]
  groups  Group[]  @relation("GroupToWord")
}

model Rating {
  id        String   @id @default(uuid())
  rating    Float    @default(0)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  word   Word   @relation(fields: [wordId], references: [id], onDelete: Cascade)
  wordId String
}

model Group {
  id        String   @id @default(uuid())
  name      String
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  words  Word[] @relation("GroupToWord")
}
