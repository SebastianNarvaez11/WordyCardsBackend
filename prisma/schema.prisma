// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  image     String?
  isActive  Boolean    @default(true)
  deleted   Boolean    @default(false)
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  groups    Group[]
  exercises Exercise[]

  @@index([deleted, isActive])
}

model Group {
  id                           String   @id @default(uuid())
  name                         String
  iconName                     String?
  maxNumberOfExercisesPerRound Float    @default(20)
  deleted                      Boolean  @default(false)
  createdAt                    DateTime @default(now())
  updateAt                     DateTime @updatedAt

  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  exercises Exercise[]
}

model Exercise {
  id                 String   @id @default(uuid())
  englishWord        String
  spanishTranslation String
  rating             Float    @default(0)
  image              String?
  deleted            Boolean  @default(false)
  createdAt          DateTime @default(now())
  updateAt           DateTime @updatedAt

  group   Group  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
}
